@model PosShared.ViewModels.ReservationViewModel

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

<div class="container mt-4">
    <h2>Make a Reservation</h2>
    
    <form asp-controller="Reservation" asp-action="Reserve" method="post">
        <input asp-for="ServiceId" class="form-control" required hidden />
            
        <div class="form-group mb-3">
            <label asp-for="CustomerName" class="form-label">Customer Name</label>
            <input asp-for="CustomerName" class="form-control" required />
            <span asp-validation-for="CustomerName" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="ReservationTime" class="form-label">Select Date and Time</label>
            <input asp-for="ReservationTime" 
                   type="datetime-local" 
                   class="form-control"
                   value="@Model.ReservationTime.ToString("yyyy-MM-ddTHH:mm")"
                   step="60"
                   required />
            <span asp-validation-for="ReservationTime" class="text-danger"></span>
        </div>


        <div class="form-group mb-3">
            <label asp-for="CustomerPhone" class="form-label">Phone Number</label>
            <input asp-for="CustomerPhone" class="form-control" required />
            <span asp-validation-for="CustomerPhone" class="text-danger"></span>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Submit Reservation</button>
            <a asp-controller="Service" asp-action="Index" class="btn btn-secondary">Back to Services</a>
        </div>
    </form>
    
    
    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>#</th>
                    <th>Service ID</th>
                    <th>Client Name</th>
                    <th>Client Phone</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                    <th>Employee ID</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var reservation in Model.Reservations.Items)
            {
                <tr>
                    <td>@reservation.Id</td>
                    <td>@reservation.ServiceId</td>
                    <td>@reservation.CustomerName</td>
                    <td>@reservation.CustomerPhone</td>
                    <td>@reservation.ReservationTime.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@reservation.ReservationEndTime.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@reservation.EmployeeId</td>
                    <td>
                        <span class="badge @GetStatusBadgeClass(reservation.Status)">
                            @reservation.Status
                        </span>
                    </td>
                </tr>
            }
            </tbody>
            <!-- Pagination -->
            <nav aria-label="Order pagination">
                <ul class="pagination justify-content-center">
                    @if (Model.Reservations.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?pageNumber=@(Model.Reservations.PageNumber - 1)&pageSize=@Model.Reservations.PageSize" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }
            
                    @for (int i = 1; i <= Model.Reservations.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.Reservations.PageNumber ? "active" : "")">
                            <a class="page-link" href="?pageNumber=@i&pageSize=@Model.Reservations.PageSize">@i</a>
                        </li>
                    }
            
                    @if (Model.Reservations.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?pageNumber=@(Model.Reservations.PageNumber + 1)&pageSize=@Model.Reservations.PageSize" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </table>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(PosShared.Models.ReservationStatus status)
    {
        return status switch
        {
            PosShared.Models.ReservationStatus.Booked => "bg-success",
            PosShared.Models.ReservationStatus.Cancelled => "bg-danger",
            PosShared.Models.ReservationStatus.Refunded => "bg-warning",
            PosShared.Models.ReservationStatus.Completed => "bg-primary",
            _ => "bg-secondary"
        };
    }
}