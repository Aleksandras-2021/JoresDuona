@model List<PosShared.Models.Schedule>
@using System.Globalization

@{
    ViewData["Title"] = $"Schedule for {ViewBag.UserName}";
    var displayDate = ViewBag.CurrentDate ?? DateTime.Now.Date;
    var displayWeekStart = ViewBag.WeekStart ?? displayDate.AddDays(-(int)displayDate.DayOfWeek);
    var enCulture = new CultureInfo("en-US");
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger" role="alert">
        <i class="bi bi-exclamation-circle"></i> @TempData["Error"]
    </div>
}

<div class="container-fluid my-4">
    <div class="text-center mb-4">
        <h1 class="mb-2">@ViewBag.UserName's Schedule</h1>
        <p class="text-muted">Viewing week of @displayWeekStart.ToString("MMMM d, yyyy", enCulture)</p>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <p class="m-0">Below is the weekly schedule calendar.</p>
        </div>
        <div class="d-flex gap-2">
            <a href="@Url.Action("Schedules", "Schedule", new { userId = ViewBag.UserId, date = displayWeekStart.AddDays(-7).ToString("yyyy-MM-dd") })" 
               class="btn btn-outline-secondary btn-sm">
                <i class="bi bi-chevron-left"></i> Previous Week
            </a>
            <a href="@Url.Action("Schedules", "Schedule", new { userId = ViewBag.UserId, date = displayWeekStart.AddDays(7).ToString("yyyy-MM-dd") })" 
               class="btn btn-outline-secondary btn-sm">
                Next Week <i class="bi bi-chevron-right"></i>
            </a>
            <a href="@Url.Action("Create", "Schedule", new { userId = ViewBag.UserId })" 
               class="btn btn-outline-primary btn-sm">
                <i class="bi bi-plus-circle"></i> Create New Timeslot
            </a>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered" style="max-width: 1400px; margin: auto;">
            <thead class="table-dark">
                <tr>
                    <th class="text-center" style="width: 80px">Time</th>
                    @{
                        for (int i = 0; i < 7; i++)
                        {
                            var day = displayWeekStart.AddDays(i);
                            <th class="text-center @(day.Date == DateTime.Now.Date ? "table-primary" : "")" style="min-width: 130px">
                                <div class="small">
                                    @day.ToString("dddd", enCulture)<br />
                                    @day.ToString("MMM d", enCulture)
                                </div>
                            </th>
                        }
                    }
                </tr>
            </thead>
            <tbody>
                @{
                    for (int hour = 0; hour <= 23; hour++)
                    {
                        <tr>
                            <td class="align-middle text-center bg-light small py-1">
                                @(hour.ToString("00")):00
                            </td>
                            @for (int day = 0; day < 7; day++)
                            {
                                var currentSlotDate = displayWeekStart.AddDays(day).AddHours(hour);
                                var schedulesInSlot = Model?.Where(s => 
                                    s.StartTime.Date == currentSlotDate.Date && 
                                    s.StartTime.Hour <= hour && 
                                    s.EndTime.Hour > hour).ToList();

                                <td class="position-relative @(currentSlotDate.Date == DateTime.Now.Date ? "bg-light" : "")" 
                                    style="height: 60px;">
                                    @if (schedulesInSlot != null && schedulesInSlot.Any())
                                    {
                                        foreach (var schedule in schedulesInSlot)
                                        {
                                            var isStartHour = schedule.StartTime.Hour == hour;
                                            var duration = (schedule.EndTime - schedule.StartTime).TotalHours;
                                            var startOffset = isStartHour ? 0 : (schedule.StartTime.Minute / 60.0 * 100);
                                            var endHourOffset = schedule.EndTime.Hour == hour ? (schedule.EndTime.Minute / 60.0) : 1;
                                            var heightPercent = ((endHourOffset - (isStartHour ? schedule.StartTime.Minute / 60.0 : 0)) * 100);
                                            
                                            <div class="position-absolute rounded border border-primary"
                                                 style="top: @startOffset%; left: 5px; right: 5px; height: @heightPercent%; background-color: rgba(13, 110, 253, 0.1);">
                                                @if (isStartHour)
                                                {
                                                    <div class="p-1 small">
                                                        <strong class="d-block">@schedule.User?.Name</strong>
                                                        <small class="d-block text-muted mb-1">
                                                            @schedule.StartTime.ToString("HH:mm", enCulture) - 
                                                            @schedule.EndTime.ToString("HH:mm", enCulture)
                                                        </small>
                                                        <div class="d-flex gap-1">
                                                            <form asp-action="Delete" method="post" class="m-0">
                                                                <input type="hidden" name="id" value="@schedule.Id" />
                                                                <input type="hidden" name="userId" value="@ViewBag.UserId" />
                                                                <button type="submit" class="btn btn-danger btn-sm"
                                                                        onclick="return confirm('Are you sure you want to delete this schedule?');">
                                                                    <i class="bi bi-trash"></i> Delete
                                                                </button>
                                                            </form>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                    }
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>