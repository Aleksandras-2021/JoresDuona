@{
   ViewData["Title"] = "User Page";
}
@model PosShared.PaginatedResult<PosShared.Models.User>

@if (TempData["Error"] != null)
{
   <div class="alert alert-danger" role="alert">
       <i class="bi bi-exclamation-circle"></i> @TempData["Error"]
   </div>
}

<div class="container my-4">
   <h1 class="text-center mb-4">@ViewData["Title"]</h1>

   <div class="d-flex justify-content-between align-items-center mb-3">
       <p class="m-0">Below is a list of all users.</p>
        <a asp-controller="DefaultShiftPattern" asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-calendar-week"></i> Manage Shift Patterns
        </a>
       <a href="@Url.Action("Create", "User")" class="btn btn-outline-primary btn-sm">
           <i class="bi bi-plus-circle"></i> Create New User
       </a>
   </div>

   @if (Model.Items.Any())
   {
       <div class="table-responsive">
           <table class="table table-striped table-hover align-middle">
               <thead class="table-dark">
                   <tr>
                       <th>#</th>
                       <th>Name</th>
                       <th>Email</th>
                       <th>Phone Number</th>
                       <th>Role</th>
                       <th>Employment Status</th>
                       <th>Schedule</th>
                       <th colspan="2">Actions</th>
                   </tr>
               </thead>
               <tbody>
                   @foreach (var user in Model.Items)
                   {
                       <tr>
                           <td>@user.Id</td>
                           <td>@user.Name</td>
                           <td>@user.Email</td>
                           <td>@user.Phone</td>
                           <td>
                               <span class="badge @GetRoleBadgeClass(user.Role)">
                                   @user.Role
                               </span>
                           </td>
                           <td>
                               <span class="badge @GetStatusBadgeClass(user.EmploymentStatus)">
                                   @user.EmploymentStatus
                               </span>
                           </td>
                           <td>
                               <a asp-controller="Schedule" asp-action="Schedules" asp-route-userId="@user.Id" class="btn btn-info btn-sm">
                                   <i class="bi bi-calendar3"></i> View Schedule
                               </a>
                           </td>
                           <td>
                               <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-warning btn-sm">
                                   <i class="bi bi-pencil"></i> Edit
                               </a>
                           </td>
                           <td>
                               <form asp-action="Delete" method="post" class="m-0">
                                   <input type="hidden" name="id" value="@user.Id" />
                                   <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this user?');">
                                       <i class="bi bi-trash"></i> Delete
                                   </button>
                               </form>
                           </td>
                       </tr>
                   }
               </tbody>
           </table>
       </div>
       
       <!-- Pagination -->
       <nav aria-label="Order pagination">
           <ul class="pagination justify-content-center">
               @if (Model.HasPreviousPage)
               {
                   <li class="page-item">
                       <a class="page-link" href="?pageNumber=@(Model.PageNumber - 1)&pageSize=@Model.PageSize" aria-label="Previous">
                           <span aria-hidden="true">&laquo;</span>
                       </a>
                   </li>
               }

               @for (int i = 1; i <= Model.TotalPages; i++)
               {
                   <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                       <a class="page-link" href="?pageNumber=@i&pageSize=@Model.PageSize">@i</a>
                   </li>
               }

               @if (Model.HasNextPage)
               {
                   <li class="page-item">
                       <a class="page-link" href="?pageNumber=@(Model.PageNumber + 1)&pageSize=@Model.PageSize" aria-label="Next">
                           <span aria-hidden="true">&raquo;</span>
                       </a>
                   </li>
               }
           </ul>
       </nav>
       
   }
</div>

@functions {
   private string GetRoleBadgeClass(PosShared.Models.UserRole role)
   {
       return role switch
       {
           PosShared.Models.UserRole.SuperAdmin => "bg-danger text-white",
           PosShared.Models.UserRole.Owner => "bg-primary text-white",
           PosShared.Models.UserRole.Manager => "bg-success text-white",
           PosShared.Models.UserRole.Worker => "bg-info text-dark",
           _ => "bg-secondary text-white"
       };
   }

    private string GetStatusBadgeClass(PosShared.Models.EmploymentStatus status)
    {
        return status switch
        {
            PosShared.Models.EmploymentStatus.Active => "bg-success text-white",
            PosShared.Models.EmploymentStatus.PaidLeave => "bg-info text-white",
            PosShared.Models.EmploymentStatus.SickLeave => "bg-warning text-dark",
            PosShared.Models.EmploymentStatus.ChildCareLeave => "bg-primary text-white",
            PosShared.Models.EmploymentStatus.Fired => "bg-danger text-white",
            PosShared.Models.EmploymentStatus.Quit => "bg-dark text-white",
            PosShared.Models.EmploymentStatus.UnpaidLeave => "bg-secondary text-white",
            _ => "bg-light text-dark"
        };
    }
}