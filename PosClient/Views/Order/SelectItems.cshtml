@model PosShared.ViewModels.SelectItemsViewModel

@{
    ViewData["Title"] = "Select Items";
}

@if (Model != null) {
<div class="container my-4">
    <h1 class="text-center mb-4">@ViewData["Title"] for Order <span class="text-primary">#@Model.OrderId</span></h1>

    <div class="mb-4 p-3 border rounded bg-light">
        <h4>Order Summary</h4>
        <p><strong>Untaxed Charge:</strong> @Model.Order.ChargeAmount.ToString("C")</p>
        <p><strong>Taxes:</strong> @Model.Order.TaxAmount.ToString("C")</p>
        <p><strong>Total:</strong> @((Model.Order.TaxAmount + Model.Order.ChargeAmount).ToString("C"))</p>
    </div>

        @if (Model.Order.Status != PosShared.Models.OrderStatus.Closed && Model.Order.Status != PosShared.Models.OrderStatus.Paid)
    {
        <form asp-action="RedirectToPayment" asp-controller="Order" method="post" class="mb-4">
            <input type="hidden" name="orderId" value="@Model.OrderId" />
            <input type="hidden" name="untaxedAmount" value="@Model.Order.ChargeAmount" />
            <input type="hidden" name="tax" value="@Model.Order.TaxAmount" />
            <button type="submit" class="btn btn-primary w-100">
                <i class="bi bi-credit-card"></i> Proceed to Payment
            </button>
        </form>
    }
    else
    {
            <form asp-action="RedirectToReceipt" asp-controller="Order" method="get" class="mb-4">
                <input type="hidden" name="orderId" value="@Model.OrderId" />
                <button type="submit" class="btn btn-primary w-100">
                    <i class="bi bi-credit-card"></i> Receipt
                </button>
            </form>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            <i class="bi bi-exclamation-circle"></i> @TempData["Error"]
        </div>
    }

    @if (!Model.OrderServices.Any() && Model.Items != null && Model.Items.Items.Any() && Model.Order.Status != PosShared.Models.OrderStatus.Closed && Model.Order.Status != PosShared.Models.OrderStatus.Paid)
    {
        <h3 class="mb-3">Available Items</h3>
        <div class="table-responsive">
            <table class="table table-striped table-hover align-middle">
                <thead class="table-dark">
                <tr>
                    <th>Item ID</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Action</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model.Items.Items)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Name</td>
                        <td>@item.Description</td>
                        <td>@item.Price.ToString("C")</td>
                        <td>@item.Quantity</td>
                        <td>
                            <form asp-action="AddItemToOrder" method="post" class="m-0">
                                <input type="hidden" name="orderId" value="@Model.OrderId" />
                                <input type="hidden" name="itemId" value="@item.Id" />
                                <button type="submit" class="btn btn-success btn-sm">
                                    <i class="bi bi-cart-plus"></i> Add to Order
                                </button>
                            </form>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
        <!-- Pagination -->
        <nav aria-label="Order pagination">
            <ul class="pagination justify-content-center">
                @if (Model.Items.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Model.OrderId&pageNumber=@(Model.Items.PageNumber - 1)&pageSize=@Model.Items.PageSize" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= Model.Items.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.Items.PageNumber ? "active" : "")">
                        <a class="page-link" href="?orderId=@Model.OrderId&pageNumber=@i&pageSize=@Model.Items.PageSize">@i</a>
                    </li>
                }

                @if (Model.Items.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Model.OrderId&pageNumber=@(Model.Items.PageNumber + 1)&pageSize=@Model.Items.PageSize" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }else
    {
        <div class="alert alert-info text-center" role="alert">
            <i class="bi bi-info-circle"></i> No items available for selection.
        </div>
    }

    @if (Model.OrderItems != null && Model.OrderItems.Any())
    {
        <h3 class="mb-3 mt-4">Items Already in Order</h3>
        <div class="table-responsive">
            <table class="table table-striped table-hover align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Item Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Tax</th>
                        <th>Total</th>
                        <th colspan="4">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var orderItem in Model.OrderItems)
                    {
                        <tr>
                            <td>@orderItem.Item.Name</td>
                            <td>@orderItem.Quantity</td>
                            <td>@orderItem.Price.ToString("C")</td>
                            <td>@orderItem.TaxedAmount.ToString("C")</td>
                            <td>@(((orderItem.Quantity * orderItem.Price) + orderItem.TaxedAmount).ToString("C"))</td>
                                @if (Model.Order.Status != PosShared.Models.OrderStatus.Closed && Model.Order.Status != PosShared.Models.OrderStatus.Paid)
                            {
                                <td>
                                    <form asp-action="RemoveItemFromOrder" method="post" class="m-0">
                                        <input type="hidden" name="orderId" value="@Model.OrderId" />
                                        <input type="hidden" name="orderItemId" value="@orderItem.Id" />
                                        <button type="submit" class="btn btn-danger btn-sm">
                                            <i class="bi bi-trash"></i> Remove
                                        </button>
                                    </form>
                                </td>
                            
                                <td>
                                    <a href="@Url.Action("ItemVariations", new { itemId = orderItem.ItemId, orderItemId = orderItem.Id, orderId = Model.OrderId })"
                                       class="btn btn-secondary btn-sm">
                                        <i class="bi bi-list"></i> Select Variation
                                    </a>
                                    </td>
                                }else
                                {
                                    <td>
                                    <a href="@Url.Action("ItemVariations", new { itemId = orderItem.ItemId, orderItemId = orderItem.Id, orderId = Model.OrderId })"
                                       class="btn btn-secondary btn-sm">
                                        <i class="bi bi-list"></i> View variations
                                    </a>
                                    </td>
                                }

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
        
        @if (@Model.OrderServices != null && Model.OrderServices.Any())
        {
            <h3 class="mb-3">OrderedService</h3>

                    <div class="table-responsive">
            <table class="table table-striped table-hover align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Id</th>
                        <th>Price</th>
                        <th>Tax</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var service in Model.OrderServices)
                    {
                        <tr>
                            <td>@service.Id</td>
                            <td>@service.Charge.ToString("C")</td>
                            <td>@service.Tax.ToString("C")</td>
                            <td>@((service.Charge + service.Tax).ToString("C"))</td>
        
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        }
        
        
</div>
}
