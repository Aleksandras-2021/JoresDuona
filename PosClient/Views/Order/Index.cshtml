@{
    ViewData["Title"] = "Order Page";
}
@using PosShared.Models
@using PosShared
@model PosShared.PaginatedResult<Order>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger" role="alert">
        <i class="bi bi-exclamation-circle"></i> @TempData["Error"]
    </div>
}
@if (TempData["Message"] != null)
{
    <div class="alert alert-info" role="alert">
        <i class="bi bi-exclamation-circle"></i> @TempData["Message"]
    </div>
}


<div class="container my-4">
    <h1 class="text-center mb-4">@ViewData["Title"]</h1>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <p class="m-0">Below is a list of all orders.</p>
        <form asp-action="Create" method="post" class="d-flex align-items-center">
            <button type="submit" class="btn btn-outline-primary btn-sm">
                <i class="bi bi-plus-circle"></i> Create New Order
            </button>
        </form>
    </div>

    @if (Model.Items.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>#</th>
                        <th>Creator ID</th>
                        <th>Created At</th>
                        <th>Status</th>
                        <th>Closed At</th>
                        <th>Tax Amount</th>
                        <th>Charge</th>
                        <th>Tip</th>
                        <th colspan="5">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model.Items)
                    {
                        <tr>
                            <td>@order.Id</td>
                            <td>@order.UserId</td>
                            <td>@order.CreatedAt.ToLocalTime().ToString("g")</td>
                            <td>
                                <span class="badge @GetStatusBadgeClass(order.Status)">
                                    @order.Status
                                </span>
                            </td>
                            <td>@order.ClosedAt?.ToLocalTime().ToString("g")</td>
                            <td>@order.TaxAmount.ToString("C")</td>
                            <td>@order.ChargeAmount.ToString("C")</td>
                            <td>@order.TipAmount.ToString("C")</td>
                            <td>
                                <a asp-action="SelectItems" asp-route-orderId="@order.Id" class="btn btn-secondary btn-sm">
                                    <i class="bi bi-eye"></i> View
                                </a>
                            </td>
                            @if (order.Status != PosShared.Models.OrderStatus.Closed)
                            {
                                <td>
                                    <form asp-action="DeleteOrder" method="post" class="m-0">
                                        <input type="hidden" name="orderId" value="@order.Id" />
                                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this order?');">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </form>
                                </td>
                                if (order.Status != OrderStatus.Refunded)
                                {
                                    <td>
                                        <form asp-action="UpdateStatus" method="post" class="m-0">
                                            <input type="hidden" name="orderId" value="@order.Id"/>
                                            <input type="hidden" name="status" value="1"/>
                                            <button type="submit" class="btn btn-warning btn-sm" onclick="return confirm('Are you sure you want to close this order?');">
                                                <i class="bi bi-lock"></i> Close Order
                                            </button>
                                        </form>
                                    </td>
                                }
                                else
                                {
                                    <td colspan="1"></td>
                                }
                            }
                            else
                            {
                                <td colspan="2"></td>
                            }
                            @if (order.Status != OrderStatus.Refunded)
                            {

                                <td>
                                    <form asp-action="Refund" asp-controller="Payment" method="get" class="m-0">
                                        <input type="hidden" name="orderId" value="@order.Id"/>
                                        <input type="hidden" name="untaxedAmount" value="@order.ChargeAmount"/>
                                        <input type="hidden" name="tax" value="@order.TaxAmount"/>
                                        <button type="submit" class="btn btn-warning btn-sm">
                                            <i class="bi bi-arrow-clockwise"></i> Refund Order
                                        </button>
                                    </form>
                                </td>
                            }
                                                        else
                                                        {
                                                            <td colspan="1"></td>
                                                        }
                            <td>
                                <a href="@Url.Action("GetOrderPayments", "Payment", new { orderId = order.Id })" class="btn btn-primary btn-sm">
                                    <i class="bi bi-credit-card"></i> Payments
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <nav aria-label="Order pagination">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="?pageNumber=@(Model.PageNumber - 1)&pageSize=@Model.PageSize" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="?pageNumber=@i&pageSize=@Model.PageSize">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="?pageNumber=@(Model.PageNumber + 1)&pageSize=@Model.PageSize" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
    else
    {
        <div class="alert alert-info text-center" role="alert">
            <i class="bi bi-info-circle"></i> No orders available.
        </div>
    }
</div>

@functions {
    private string GetStatusBadgeClass(PosShared.Models.OrderStatus status)
    {
        return status switch
        {
            PosShared.Models.OrderStatus.Open => "bg-success text-white",
            PosShared.Models.OrderStatus.Refunded => "bg-warning text-dark",
            PosShared.Models.OrderStatus.Closed => "bg-secondary text-white",
            _ => "bg-dark text-white"
        };
    }
}
